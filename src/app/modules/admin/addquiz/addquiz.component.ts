import { ChangeDetectorRef, Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { CreateQuiz } from '../../../core/enums/CreateQuiz';
import { QuizService } from '../../../shared/services/Quiz/quiz.service';
import { SkillService } from '../../../shared/services/Skill/skill.service';
import { ISkill } from '../../../core/enums/Skill';
import { ToastrService } from 'ngx-toastr';

@Component({
  selector: 'app-addquiz',
  templateUrl: './addquiz.component.html',
  styleUrl: './addquiz.component.css'
})
export class AddquizComponent {

  quizForm: FormGroup;
  skills: ISkill[] = [];

  constructor(
    private fb: FormBuilder,
    private quizService: QuizService,
    private skillservice:SkillService,
    private cdr:ChangeDetectorRef,
    private touster:ToastrService
  ) {
    this.quizForm = this.fb.group({
      QuizName: ['', Validators.required],
      NumberOfQuestions: [0, [Validators.required, Validators.min(1)]],
      Duration: [0, [Validators.required, Validators.min(1)]],
      SkillId: [null, Validators.required], // Ensure this matches the formControlName in the template
    });
  }

  ngOnInit(): void {
    this.loadSkills();
  }

  loadSkills(): void {
    this.skillservice.getallskills2().subscribe({
      next: (skills) => {
        console.log('Skills loaded:', skills); // Add this line
        this.skills = skills;
        this.cdr.detectChanges(); // Force change detection
      },
      error: (error) => {
        console.error('Error fetching skills:', error);
      }
    });
  }

  onSubmit(): void {
    if (this.quizForm.valid) {
      const quizData: CreateQuiz = {
        QuizId: 0, // Assuming it's autogenerated
        QuizName: this.quizForm.value.QuizName,
        NumberOfQuestions: this.quizForm.value.NumberOfQuestions,
        Duration: this.quizForm.value.Duration,
        SkillId: this.quizForm.value.SkillId, // Selected skill ID from dropdown
      };

      this.quizService.createQuiz(quizData).subscribe({
        next: (response) => {
          console.log('Quiz created successfully:', response);
          this.touster.success("Quiz Created Successfully");
        },
        error: (error) => {
          console.error('Error creating quiz:', error);
          this.touster.error("Failed to Create Quiz")
        }
      });
    }
  }
}
